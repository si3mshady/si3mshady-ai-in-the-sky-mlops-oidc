name: UrbanSound â€¢ SageMaker OIDC MLOps (CNN)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_retrain:
        description: "Force SageMaker training"
        default: "false"
      endpoint_env:
        description: "Endpoint environment"
        default: "staging"
        type: choice
        options: [staging, production]
      train_instance_type:
        description: "SageMaker Training InstanceType"
        default: "ml.m5.large"   # CPU by default; change to ml.g4dn.xlarge if you want GPU training
      serve_instance_type:
        description: "Endpoint InstanceType"
        default: "ml.g4dn.xlarge"  # requested

env:
  AWS_REGION: us-east-2
  TRAIN_ECR_REPOSITORY: urbansound-train
  INFER_ECR_REPOSITORY: urbansound-infer
  S3_BUCKET: urbansound-mlops-56423506
  SAGEMAKER_EXECUTION_ROLE_ARN: arn:aws:iam::564230509626:role/urbansound-sagemaker-execution
  OIDC_ROLE_ARN: arn:aws:iam::564230509626:role/urbansound-github-actions
  ENDPOINT_NAME_BASE: urbansound-audio
  PYTHON_VERSION: "3.11"
  DOCKER_BUILDKIT: "1"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    outputs:
      train-image-uri: ${{ steps.push-train.outputs.TRAIN_IMAGE_URI }}
      infer-image-uri: ${{ steps.push-infer.outputs.INFER_IMAGE_URI }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr
      
      - name: Build + Push TRAIN image
        id: push-train
        env:
          ECR: 564230509626.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.TRAIN_ECR_REPOSITORY }}
          TAG: ${{ github.sha }}
        run: |
          docker build -t "$ECR:$TAG" -f docker/training/Dockerfile .
          docker push "$ECR:$TAG"
          echo "TRAIN_IMAGE_URI=$ECR:$TAG" >> $GITHUB_OUTPUT
      
      - name: Build + Push INFER image
        id: push-infer
        env:
          ECR: 564230509626.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.INFER_ECR_REPOSITORY }}
          TAG: ${{ github.sha }}
        run: |
          docker build -t "$ECR:$TAG" -f docker/inference/Dockerfile .
          docker push "$ECR:$TAG"
          echo "INFER_IMAGE_URI=$ECR:$TAG" >> $GITHUB_OUTPUT

  sagemaker-train-and-deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with: 
          python-version: ${{ env.PYTHON_VERSION }}
      
      - run: pip install boto3 botocore pyyaml
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Launch SageMaker training & deploy endpoint
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          TRAIN_IMAGE_URI: ${{ needs.build-and-push-images.outputs.train-image-uri }}
          INFER_IMAGE_URI: ${{ needs.build-and-push-images.outputs.infer-image-uri }}
          S3_BUCKET: ${{ env.S3_BUCKET }}
          SAGEMAKER_EXECUTION_ROLE_ARN: ${{ env.SAGEMAKER_EXECUTION_ROLE_ARN }}
          ENDPOINT_NAME_BASE: ${{ env.ENDPOINT_NAME_BASE }}
          FORCE_RETRAIN: ${{ inputs.force_retrain || 'false' }}
          INSTANCE_TYPE: ${{ inputs.train_instance_type }}
          ENDPOINT_ENV: ${{ inputs.endpoint_env }}
          SERVE_INSTANCE_TYPE: ${{ inputs.serve_instance_type }}
          GIT_SHA: ${{ github.sha }}
        run: python scripts/sm_train_and_deploy.py

